{"version":3,"file":"request.js","sources":["utils/request.js"],"sourcesContent":["// API请求封装\r\nconst baseURL = 'http://localhost:8080/api/v1';\r\n\r\n// 请求拦截器\r\nconst request = (options) => {\r\n  return new Promise((resolve, reject) => {\r\n    // 构建请求参数\r\n    options.url = baseURL + options.url;\r\n    options.header = options.header || {};\r\n    \r\n    // 添加token认证\r\n    const token = uni.getStorageSync('token');\r\n    if (token) {\r\n      options.header['Authorization'] = 'Bearer ' + token;\r\n    }\r\n    \r\n    // 发起请求\r\n    uni.request({\r\n      ...options,\r\n      success: (res) => {\r\n        // 请求成功但状态码异常\r\n        if (res.statusCode === 401) {\r\n          // token失效，跳转到登录页\r\n          uni.showToast({\r\n            title: '登录已过期，请重新登录',\r\n            icon: 'none'\r\n          });\r\n          \r\n          setTimeout(() => {\r\n            uni.navigateTo({\r\n              url: '/pages/login/index'\r\n            });\r\n          }, 1500);\r\n          \r\n          reject(res);\r\n          return;\r\n        }\r\n        \r\n        if (res.statusCode !== 200 && res.statusCode!== 201) {\r\n          uni.showToast({\r\n            title: res.data.message || '请求失败',\r\n            icon: 'none'\r\n          });\r\n          reject(res);\r\n          return;\r\n        }\r\n        \r\n        resolve(res.data);\r\n      },\r\n      fail: (err) => {\r\n        uni.showToast({\r\n          title: '网络请求失败，请检查网络',\r\n          icon: 'none'\r\n        });\r\n        reject(err);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n// 封装GET请求\r\nconst get = (url, data = {}, options = {}) => {\r\n  return request({\r\n    url,\r\n    data,\r\n    method: 'GET',\r\n    ...options\r\n  });\r\n};\r\n\r\n// 封装POST请求\r\nconst post = (url, data = {}, options = {}) => {\r\n  return request({\r\n    url,\r\n    data,\r\n    method: 'POST',\r\n    ...options\r\n  });\r\n};\r\n\r\n// 封装PUT请求\r\nconst put = (url, data = {}, options = {}) => {\r\n  return request({\r\n    url,\r\n    data,\r\n    method: 'PUT',\r\n    ...options\r\n  });\r\n};\r\n\r\n// 封装DELETE请求\r\nconst del = (url, data = {}, options = {}) => {\r\n  return request({\r\n    url,\r\n    data,\r\n    method: 'DELETE',\r\n    ...options\r\n  });\r\n};\r\n\r\nexport default {\r\n  request,\r\n  get,\r\n  post,\r\n  put,\r\n  delete: del\r\n};"],"names":["uni"],"mappings":";;AACA,MAAM,UAAU;AAGhB,MAAM,UAAU,CAAC,YAAY;AAC3B,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEtC,YAAQ,MAAM,UAAU,QAAQ;AAChC,YAAQ,SAAS,QAAQ,UAAU,CAAA;AAGnC,UAAM,QAAQA,cAAAA,MAAI,eAAe,OAAO;AACxC,QAAI,OAAO;AACT,cAAQ,OAAO,eAAe,IAAI,YAAY;AAAA,IAC/C;AAGDA,kBAAAA,MAAI,QAAQ;AAAA,MACV,GAAG;AAAA,MACH,SAAS,CAAC,QAAQ;AAEhB,YAAI,IAAI,eAAe,KAAK;AAE1BA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UAClB,CAAW;AAED,qBAAW,MAAM;AACfA,0BAAAA,MAAI,WAAW;AAAA,cACb,KAAK;AAAA,YACnB,CAAa;AAAA,UACF,GAAE,IAAI;AAEP,iBAAO,GAAG;AACV;AAAA,QACD;AAED,YAAI,IAAI,eAAe,OAAO,IAAI,eAAc,KAAK;AACnDA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO,IAAI,KAAK,WAAW;AAAA,YAC3B,MAAM;AAAA,UAClB,CAAW;AACD,iBAAO,GAAG;AACV;AAAA,QACD;AAED,gBAAQ,IAAI,IAAI;AAAA,MACjB;AAAA,MACD,MAAM,CAAC,QAAQ;AACbA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QAChB,CAAS;AACD,eAAO,GAAG;AAAA,MACX;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;AAGA,MAAM,MAAM,CAAC,KAAK,OAAO,CAAA,GAAI,UAAU,CAAA,MAAO;AAC5C,SAAO,QAAQ;AAAA,IACb;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,IACR,GAAG;AAAA,EACP,CAAG;AACH;AAGA,MAAM,OAAO,CAAC,KAAK,OAAO,CAAA,GAAI,UAAU,CAAA,MAAO;AAC7C,SAAO,QAAQ;AAAA,IACb;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,IACR,GAAG;AAAA,EACP,CAAG;AACH;AAGA,MAAM,MAAM,CAAC,KAAK,OAAO,CAAA,GAAI,UAAU,CAAA,MAAO;AAC5C,SAAO,QAAQ;AAAA,IACb;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,IACR,GAAG;AAAA,EACP,CAAG;AACH;AAGA,MAAM,MAAM,CAAC,KAAK,OAAO,CAAA,GAAI,UAAU,CAAA,MAAO;AAC5C,SAAO,QAAQ;AAAA,IACb;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,IACR,GAAG;AAAA,EACP,CAAG;AACH;AAEA,MAAe,YAAA;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAQ;AACV;;"}